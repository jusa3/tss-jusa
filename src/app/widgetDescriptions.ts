export const AutocompleteDescription = "A component to provide auto-suggestions across different terminology services. Suggested terms can be selected within the widget. The change of the currently selected terms can be linked with a self defined action." as const;

export const DataContentDescription = "A component to display information about the dimensions of a terminology service or a specific collection." as const;

export const EntityInfoDescription = "A component to display information about an entity (class, property or individual). The widget lists information including the entity's label, synonyms, additional annotations and entity type-specific information. The widget operates on API responses in the OLS API format (legacy and non-legacy), and the non-legacy version provides more information, better structure and more possibilities for navigation. The actions executed when clicking on an entity link, badge or search button can be adapted to the needs of the specific use case via the functions onNavigateToEntity, onNavigateToOntology and onNavigateToDisambiguate which can be optionally provided as widget parameters." as const;

export const EntityRelationsDescription = "A component to display an entity's (class, property or individual) relations to other entities. The widget lists entity type-specific relation types such as property chains or sub-entity of-relationships. Relationships are specified in Manchester syntax format. The widget operates on API responses in the OLS API format (legacy and non-legacy), and the non-legacy version provides more information, better structure and more possibilities for navigation. The actions executed when clicking on an entity link, badge or search button can be adapted to the needs of the specific use case via the functions onNavigateToEntity, onNavigateToOntology and onNavigateToDisambiguate which can be optionally provided as widget parameters." as const;

export const GraphViewDescription = "A component to display a classes' relations to other entities as a graph. Initially, relations are only shown one level deep. Nodes can be expanded by double clicking them. Alternatively, the widget can also display the relation path from the selected class to the ontology root." as const;

export const JsonApiDescription = "A component to render a button linking to an API query displaying a JSON response." as const;

export const BreadcrumbDescription = "A component to display the ontology and curie of an entity as badges to indicate the location of an entity within a terminology service. The colour of both badges can be changed. The ontology badge is clickable, and the resulting action can be individually defined by providing the function onNavigateToOntology as a widget parameter. The widget operates on API responses in the OLS API format (legacy and non-legacy)." as const;

export const DescriptionDescription = "A component to display the description of a thing (ontology, class, property or individual). The colour of the text can be changed, and the displayed text can be manually provided by specifying the property descText. The widget operates on API responses in the OLS API format (legacy and non-legacy)." as const;

export const EntityDefinedByDescription = "A component to display a list of badges containing the ontologies a given entity is defined in (excluding the ontology currently in). If more than 5 badges are available, they are collapsed, with the option to be expanded. If no badge is available, the widget will be empty. The widget operates on API responses in the OLS API format (legacy and non-legacy)." as const;

export const EntityOntoListDescription = "A component to display a list of badges containing the ontologies a given entity appears in, but is not defined in (excluding the ontology currently in). If more than 5 badges are available, they are collapsed, with the option to be expanded. If no badge is available, the widget will be empty. The widget operates on API responses in the OLS API format (legacy and non-legacy)." as const;

export const IriDescription = "A component to display a provided iri as a clickable link. A custom text to display can be specified, and the colour of the text can be changed. An icon to mark the link as external as well as a button to copy the link can be turned on and off. A URL prefix can be specified." as const;

export const MetadataDescription = "A component to provide metadata for a given entity (class, property or individual). The widget consists of the entity's title (which can be a clickable link), breadcrumb, iri, description, a list of ontologies where the entity also appears, a list of ontologies where the entity is defined in, and a set of optional tabs. The tabs which can be selected to be displayed are a tab for alternative names, the entity's hierarchy, cross references, and information about the terminology in which the entity appears. The widget operates on API responses in the OLS API format (legacy and non-legacy), and the non-legacy version provides more information, better structure and more possibilities for navigation." as const;

export const AlternativeNameTabDescription = "A component to list alternative names of a given entity (class, property or individual). The widget operates on API responses in the OLS API format (legacy and non-legacy)." as const;

export const CrossRefTabDescription = "A component to list cross references of a given entity (class, property or individual). The widget operates on API responses in the OLS API format (legacy and non-legacy)." as const;

export const HierarchyDescription = "A component to display the hierarchy of a given entity (especially classes). When provided with an entity's iri, the widget initially displays the hierarchy from the terminology roots down to the specified entity. Nodes can be expanded by clicking on the arrow on the left of a label. Widget parameters allow to toggle whether obsolete entities shall be included, only preferred roots should be displayed in a root hierarchy, expansion states should be remembered when re-opening nodes, and siblings should initially be displayed. The widget can be used to display hierarchies from OLS, OntoPortal or Skosmos API endpoints. The actions executed when clicking on an entity link or badge can be adapted to the needs of the specific use case via the functions onNavigateToEntity, onNavigateToOntology which can be optionally provided as widget parameters." as const;

export const TabDescription = "A component to gather tabs providing additional information for a given entity. The tabs to be included can be specified via widget parameters. The widget operates on API responses in the OLS API format (legacy and non-legacy), and the non-legacy version provides more information, better structure and more possibilities for navigation." as const;

export const TitleDescription = "A component to display the title of a thing (ontology, class, property or individual). The displayed text can be manually specified by providing it in the parameter titleText. A default value and css styles can be applied. The widget operates on API responses in the OLS API format (legacy and non-legacy)." as const;

export const OntologyInfoDescription = "A component to display information about an ontology. The widget lists information including the ontology's iri and version iri, the date the ontology was last loaded, the ontology id and version, number of classes, and additional annotations. The widget operates on API responses in the OLS API format (legacy and non-legacy), and the non-legacy version provides more information, better structure and more possibilities for navigation. The actions executed when clicking on an entity link, badge or search button can be adapted to the needs of the specific use case via the functions onNavigateToEntity, onNavigateToOntology and onNavigateToDisambiguate which can be optionally provided as widget parameters." as const;

