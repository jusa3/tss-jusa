import{b as e}from"./iframe-CTDlrwV_.js";import{O as I,u as N,k as _,l as m,m as v,p as O,j as b,D as L}from"./widgetDescriptions-BWQxYL9a.js";import{Z as l}from"./globals-BpbGe8p9.js";import"./preload-helper-Dp1pzeXC.js";function f(a){const{api:r,parameter:c,...j}=a,A=new I(r),{data:t,isLoading:T,isError:E,dataUpdatedAt:p}=N(["ontologiesData",r,c],async()=>A.getOntologiesData(a.parameter));return e.jsx(e.Fragment,{children:e.jsx(_,{"data-testid":"data-content",title:"Data Content",description:p?`Updated ${new Date(p).toLocaleString()}`:"",layout:"horizontal",children:e.jsxs(m,{...j,children:[E&&e.jsx(m,{children:"No data content available"}),T?e.jsx(v,{size:"s"}):e.jsxs("ul",{children:[t!=null&&t.getTotalOntologies()?e.jsxs("li",{children:[t==null?void 0:t.getTotalOntologies().toLocaleString()," ","ontologies and terminologies"]}):e.jsx("li",{style:{fontStyle:"italic"},children:"ontology number not available"}),t!=null&&t.getNumClasses()?e.jsxs("li",{children:[t==null?void 0:t.getNumClasses().toLocaleString()," terms"]}):e.jsx("li",{style:{fontStyle:"italic"},children:"term number not available"}),t!=null&&t.getNumProperties()?e.jsxs("li",{children:[t==null?void 0:t.getNumProperties().toLocaleString()," ","properties"]}):e.jsx("li",{style:{fontStyle:"italic"},children:"property number not available"}),t!=null&&t.getNumIndividuals()?e.jsxs("li",{children:[t==null?void 0:t.getNumIndividuals().toLocaleString()," ","individuals"]}):e.jsx("li",{style:{fontStyle:"italic"},children:"individual number not available"})," "]})]})})})}f.__docgenInfo={description:"",methods:[],displayName:"DataContentWidget",props:{api:{required:!0,tsType:{name:"string"},description:"The API instance for the API call."},parameter:{required:!1,tsType:{name:"string"},description:""}}};const{within:P,expect:w,waitFor:F}=__STORYBOOK_MODULE_TEST__,B={...b,...O},o={api:"",parameter:""},H={...o,api:l,parameter:"collection=nfdi4health"},U={...o,api:l,parameter:"collection=safety"},q={...o,api:l,parameter:"collection=safety"},d=async({canvasElement:a})=>{const r=P(a);await F(async()=>{const c=r.getByTestId("data-content");await w(c).toBeInTheDocument()},{timeout:3e3})},k={title:"Terminology Service/DataContentWidget",tags:["autodocs"],parameters:{layout:"centered",docs:{description:{component:L}}},component:f,argTypes:B,args:o},n={args:H,play:d},s={args:U,play:d},i={args:q,play:d};var g,u,y;n.parameters={...n.parameters,docs:{...(g=n.parameters)==null?void 0:g.docs,source:{originalSource:`{
  args: NFDI4HealthDataContentWidgetArgs,
  play: commonDataContentWidgetPlay
}`,...(y=(u=n.parameters)==null?void 0:u.docs)==null?void 0:y.source}}};var C,h,S;s.parameters={...s.parameters,docs:{...(C=s.parameters)==null?void 0:C.docs,source:{originalSource:`{
  args: SafetyDataContentWidgetArgs,
  play: commonDataContentWidgetPlay
}`,...(S=(h=s.parameters)==null?void 0:h.docs)==null?void 0:S.source}}};var W,x,D;i.parameters={...i.parameters,docs:{...(W=i.parameters)==null?void 0:W.docs,source:{originalSource:`{
  args: ErrorDataContentWidgetArgs,
  play: commonDataContentWidgetPlay
}`,...(D=(x=i.parameters)==null?void 0:x.docs)==null?void 0:D.source}}};const K=["NFDI4HealthDataContentWidget","SafetyDataContentWidget","ErrorDataContentWidget"];export{i as ErrorDataContentWidget,n as NFDI4HealthDataContentWidget,s as SafetyDataContentWidget,K as __namedExportsOrder,k as default};
