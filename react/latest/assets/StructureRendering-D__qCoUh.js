import{b as e}from"./iframe-CTDlrwV_.js";import{br as E,x as d,E as J,bj as U,B as u}from"./widgetDescriptions-BWQxYL9a.js";import{E as q}from"./icon_tip-Drht4bM1.js";const y=!0;function _(s){return e.jsx(q,{type:"iInCircle",color:"subdued",content:s})}function V(s,a){const n=Object.keys(a).map(o=>{const t=s.getLinkedEntities().getLabelForIri(o)||o;return t?"*"+a[o]+" ("+t+")":""}).join(`
`);return _(n)}function F(s,a,n,o=y,t){const i=a.getLabelForIri(n)||n.split("/").pop()||n,m=a.get(n),f=s.getOntologyId();if(s.getType()!=="ontology"&&n===(s==null?void 0:s.getIri()))return e.jsx("span",{className:"highlight",children:s.getLabel()});if(!m)return n.startsWith("http")?e.jsx("a",{className:"clickable",href:n,children:i}):e.jsx("span",{children:i});const g=m.definedBy?m.definedBy.filter(c=>c!==f):[],l=m.type?E(m.type):s.getType();return g.length===1?m.hasLocalDefinition?e.jsxs(e.Fragment,{children:[e.jsx("button",{className:"clickable",onClick:()=>{t.onNavigateToEntity&&t.onNavigateToEntity(f,l,{iri:n,label:i})},children:i}),o?e.jsxs(e.Fragment,{children:[" ",e.jsx("button",{className:"no-decoration",onClick:()=>{t.onNavigateToOntology&&t.onNavigateToOntology(g[0],l,{iri:n,label:i})},children:e.jsx("span",{className:"ontology-badge",children:g[0].toUpperCase()})})]}):e.jsx(e.Fragment,{})]}):e.jsxs(e.Fragment,{children:[e.jsx("button",{className:"clickable",onClick:()=>{t.onNavigateToEntity&&t.onNavigateToEntity(g[0],l,{iri:n,label:i})},children:i}),o?e.jsxs(e.Fragment,{children:[" ",e.jsx("button",{className:"no-decoration",onClick:()=>{t.onNavigateToOntology&&t.onNavigateToOntology(g[0],l,{iri:n,label:i})},children:e.jsx("span",{className:"ontology-badge",children:g[0].toUpperCase()})})]}):e.jsx(e.Fragment,{})]}):g.length>1?m.hasLocalDefinition?e.jsxs(e.Fragment,{children:[e.jsx("button",{className:"clickable",onClick:()=>{t.onNavigateToEntity&&t.onNavigateToEntity(f,l,{iri:n,label:i})},children:i}),o?e.jsxs(e.Fragment,{children:[" ",g.map(c=>e.jsx("button",{className:"no-decoration",onClick:()=>{t.onNavigateToOntology&&t.onNavigateToOntology(c,l,{iri:n,label:i})},children:e.jsx("span",{className:"ontology-badge",children:c.toUpperCase()})},d()))]}):e.jsx(e.Fragment,{})]}):e.jsxs(e.Fragment,{children:[e.jsx("a",{className:"clickable",href:n,children:i}),o?e.jsxs(e.Fragment,{children:[" ",e.jsx("button",{className:"no-decoration",onClick:()=>{t.onNavigateToDisambiguate&&t.onNavigateToDisambiguate(l,{iri:n,label:i})},children:e.jsxs("span",{className:"ontology-badge",children:[e.jsx(J,{type:"search",size:"s"})," ",g.length," ","ontologies"]})},d())]}):e.jsx(e.Fragment,{})]}):m.hasLocalDefinition?e.jsx(e.Fragment,{children:e.jsx("button",{className:"clickable",onClick:()=>{t.onNavigateToEntity&&t.onNavigateToEntity(f,l,{iri:n,label:i})},children:i})}):parseInt(m.numAppearsIn)>0?e.jsxs(e.Fragment,{children:[e.jsx("a",{className:"clickable",href:n,children:i}),o?e.jsxs(e.Fragment,{children:[" ",e.jsx("button",{className:"no-decoration",onClick:()=>{t.onNavigateToDisambiguate&&t.onNavigateToDisambiguate(l,{iri:n,label:i})},children:e.jsxs("span",{className:"ontology-badge",children:[e.jsx(J,{type:"search",size:"s"})," ",m.numAppearsIn," ",parseInt(m.numAppearsIn)>1?"ontologies":"ontology"]})},d())]}):e.jsx(e.Fragment,{})]}):e.jsx(e.Fragment,{children:e.jsx("a",{className:"clickable",href:m.url||n,children:i})})}function h(s,a,n,o=y,t){let i=e.jsx(e.Fragment,{});if(a=a.mergeWith(n.linkedEntities),typeof n=="string")i=F(s,a,n,o,t);else if(typeof n=="object"&&!Array.isArray(n)&&Array.isArray(n.type)&&n.type.indexOf("reification")!==-1)i=M(s,U.fromJson(n)[0],o,t);else{const m=n["http://www.w3.org/2002/07/owl#someValuesFrom"],f=n["http://www.w3.org/2002/07/owl#allValuesFrom"],g=u(n["http://www.w3.org/2002/07/owl#intersectionOf"]),l=u(n["http://www.w3.org/2002/07/owl#unionOf"]),c=n["http://www.w3.org/2002/07/owl#hasValue"],x=n["http://www.w3.org/2002/07/owl#minCardinality"]||n["http://www.w3.org/2002/07/owl#minQualifiedCardinality"],j=n["http://www.w3.org/2002/07/owl#maxCardinality"]||n["http://www.w3.org/2002/07/owl#maxQualifiedCardinality"],k=n["http://www.w3.org/2002/07/owl#cardinality"]||n["http://www.w3.org/2002/07/owl#qualifiedCardinality"],N=n["http://www.w3.org/2002/07/owl#hasSelf"],S=n["http://www.w3.org/2002/07/owl#complementOf"],I=u(n["http://www.w3.org/2002/07/owl#oneOf"]),O=n["http://www.w3.org/2002/07/owl#inverseOf"],w=n["http://www.w3.org/2002/07/owl#onProperty"],L=n["http://www.w3.org/2002/07/owl#onDatatype"];if(L){const r=[h(s,a,L,o,t)],p=u(n["http://www.w3.org/2002/07/owl#withRestrictions"]);if(p.length>0){r.push(e.jsx(e.Fragment,{children:"["}));let b=!0;for(const T of p){b?b=!1:r.push(e.jsx(e.Fragment,{children:", "}));const C=T["http://www.w3.org/2001/XMLSchema#minExclusive"],v=T["http://www.w3.org/2001/XMLSchema#minInclusive"],A=T["http://www.w3.org/2001/XMLSchema#maxExclusive"],X=T["http://www.w3.org/2001/XMLSchema#maxInclusive"];C?r.push(e.jsxs(e.Fragment,{children:["> ",C]})):v?r.push(e.jsxs(e.Fragment,{children:["≥ ",v]})):A?r.push(e.jsxs(e.Fragment,{children:["< ",A]})):X&&r.push(e.jsxs(e.Fragment,{children:["≤ ",X]}))}r.push(e.jsx(e.Fragment,{children:"]"}))}i=e.jsx(e.Fragment,{children:r.map(b=>e.jsx("span",{children:b},d()))})}else if(m)i=e.jsxs(e.Fragment,{children:[h(s,a,w,o,t),e.jsx("i",{style:{color:"purple"},children:" some "}),h(s,a,u(m)[0],o,t)]});else if(f)i=e.jsxs(e.Fragment,{children:[h(s,a,w,o,t),e.jsx("i",{style:{color:"purple"},children:" only "}),h(s,a,u(f)[0],o,t)]});else if(g.length>0){const r=[e.jsx("span",{className:"text-neutral-default",children:"("},d())];for(const p of g)r.length>1&&r.push(e.jsx("i",{children:" and "})),r.push(h(s,a,p,o,t));r.push(e.jsx("span",{className:"text-neutral-default",children:")"})),i=e.jsx("span",{children:r.map(p=>e.jsx("span",{children:p},d()))})}else if(l.length>0){const r=[e.jsx("span",{className:"text-neutral-default",children:"("},d())];for(const p of l)r.length>1&&r.push(e.jsx("i",{children:" or "})),r.push(h(s,a,p,o,t));r.push(e.jsx("span",{className:"text-neutral-default",children:")"})),i=e.jsx("span",{children:r.map(p=>e.jsx("span",{children:p},d()))})}else if(c)i=e.jsxs(e.Fragment,{children:[h(s,a,w,o,t),e.jsx("i",{style:{color:"purple"},children:" value "}),h(s,a,u(c)[0],o,t)]});else if(x)i=e.jsxs(e.Fragment,{children:[h(s,a,w,o,t),e.jsx("i",{style:{color:"purple"},children:" min "}),h(s,a,u(x)[0],o,t)]});else if(j)i=e.jsxs(e.Fragment,{children:[h(s,a,w,o,t),e.jsx("i",{style:{color:"purple"},children:" max "}),h(s,a,u(j)[0],o,t)]});else if(k)i=e.jsxs(e.Fragment,{children:[h(s,a,w,o,t),e.jsx("i",{style:{color:"purple"},children:" exactly "}),h(s,a,u(k)[0],o,t)]});else if(N)i=e.jsxs(e.Fragment,{children:[h(s,a,w,o,t),e.jsx("i",{style:{color:"purple"},children:" Self "}),h(s,a,u(N)[0],o,t)]});else if(S)i=e.jsxs(e.Fragment,{children:[e.jsx("i",{children:"not "}),h(s,a,u(S)[0],o,t)]});else if(I.length>0){const r=[e.jsx("span",{className:"text-neutral-default",children:"{"},d())];for(const p of I)r.length>1&&r.push(e.jsx("span",{className:"text-neutral-default",children:", "},d())),r.push(h(s,a,p,o,t));r.push(e.jsx("span",{className:"text-neutral-default",children:"}"})),i=e.jsx("span",{children:r.map(p=>e.jsx("span",{children:p},d()))})}else O&&(i=e.jsxs(e.Fragment,{children:[e.jsx("i",{style:{color:"purple"},children:"inverse "}),e.jsx("span",{className:"text-neutral-default",children:"("},d()),h(s,a,O,o,t),e.jsx("span",{className:"text-neutral-default",children:")"},d())]}))}return i}function W(s,a,n,o=y,t){return e.jsx(e.Fragment,{children:n.length===1?e.jsx("p",{children:h(s,s.getLinkedEntities(),n[0],o,t)}):e.jsx("ul",{children:n.map(i=>e.jsx("li",{children:h(s,s.getLinkedEntities(),i,o,t)},d()))})})}function D(s,a,n,o=y,t){const i=[];if(n)for(const l of Object.keys(n.linkedEntities))for(let c=a.indexOf(l,0);c!==-1;c=a.indexOf(l,c))i.push({start:c,end:c+l.length,link:F(s,n,l,o,t)}),c+=l.length;const m=/[A-z]+:\/\/[^\s]+/g;for(let l=m.exec(a);l;l=m.exec(a)){const c=l[0];i.push({start:l.index,end:l.index+c.length,link:e.jsx("span",{children:e.jsx("a",{className:"clickable",href:c,children:c})},d())})}i.sort((l,c)=>l.start-c.start);e:for(let l=0;l<i.length;){for(let c=l+1;c<i.length;++c){const x=i[l],j=i[c];if(x!==j&&x.end>=j.start&&j.end>=x.start){x.end-x.start<j.end-j.start?i.splice(l,1):i.splice(c,1);continue e}}++l}if(i.length===0)return e.jsx(e.Fragment,{children:a});const f=[];let g=0;for(const l of i)f.push(e.jsx("span",{children:a.substring(g,l.start)},d())),f.push(l.link),g=l.end;return f.push(e.jsx("span",{children:a.slice(g)},d())),e.jsx(e.Fragment,{children:f})}function M(s,a,n=y,o){function t(i){const m=s.getLinkedEntities();return Object.keys(m.linkedEntities).length==0?typeof i.value=="string"?D(s,i.value.toString(),void 0,n,o):e.jsx(e.Fragment,{children:JSON.stringify(i.value)}):m.get(i.value)?F(s,m,i.value,n,o):typeof i.value!="string"?s.getType()=="ontology"?e.jsx(e.Fragment,{children:JSON.stringify(i.value)}):h(s,m,i.value,n,o):D(s,i.value.toString(),m,n,o)}return e.jsxs(e.Fragment,{children:[t(a)," ",a.hasMetadata()&&V(s,a.getMetadata())]})}_.__docgenInfo={description:"",methods:[],displayName:"getTooltip"};V.__docgenInfo={description:`ONLY USABLE WITH V2-API ENTITIES

Returns Reified axioms as JSX element (similar to MetadataTooltip component in ols4 project)
@param parentEntity the surrounding entity of the axioms array (for eventual label fetching)
@param axiomsDict the entities axioms in the format returned by Reified::getMetadata()
@returns ReactElement the axioms in JSX format to display`,methods:[],displayName:"getAxiomsInformationJSX",props:{properties:{required:!0,tsType:{name:"any"},description:""}}};F.__docgenInfo={description:`ONLY USABLE WITH V2-API ENTITIES

Returns a labeled entity link as JSX element
@param parentEntity the entity object in which the linked entity exists
@param linkedEntities the linkedEntities object (exists as param because it is necessary that the entity has a linkedEntities block in properties)
@param iri   the entities' iri
@param showBadges    boolean which indicates if badges should be shown
@param onNavigates functions defining the action when clicking clickable items
@param onNavigates.onNavigateToEntity function defining the action when clicking on an entities name
@param onNavigates.onNavigateToOntology function defining the action when clicking on an ontology badge
@param onNavigates.onNavigateToDisambiguate function defining the action when clicking on a disambiguation badge
@returns ReactElement the entity link JSX`,methods:[],displayName:"getEntityLinkJSX",props:{properties:{required:!0,tsType:{name:"any"},description:""}}};h.__docgenInfo={description:`ONLY USABLE WITH V2-API ENTITIES

Builds and returns one element of a sections' list, possibly in a recursive fashion by parsing the response object at the currentResponsePath to show Manchester syntax.
@param parentEntity the entity object possessing the whole response object
@param linkedEntities the linkedEntities object (exists as param because it is necessary that the entity has a linkedEntities block in properties)
@param currentResponsePath the current sub-object of the parentEntities response object parsed as class expression
@param showBadges boolean which indicates if badges should be shown
@param onNavigates functions defining the action when clicking clickable items
@param onNavigates.onNavigateToEntity function defining the action when clicking on an entities name
@param onNavigates.onNavigateToOntology function defining the action when clicking on an ontology badge
@param onNavigates.onNavigateToDisambiguate function defining the action when clicking on a disambiguation badge
@returns ReactElement the class expression JSX`,methods:[],displayName:"getClassExpressionJSX",props:{properties:{required:!0,tsType:{name:"any"},description:""}}};W.__docgenInfo={description:`Builds and returns an array of section list elements specified at \`currentResponsePath\`
@param parentEntity
@param linkedEntities
@param array
@param showBadges
@param onNavigates functions defining the action when clicking clickable items
@param onNavigates.onNavigateToEntity function defining the action when clicking on an entities name
@param onNavigates.onNavigateToOntology function defining the action when clicking on an ontology badge
@param onNavigates.onNavigateToDisambiguate function defining the action when clicking on a disambiguation badge`,methods:[],displayName:"getSectionListJSX",props:{properties:{required:!0,tsType:{name:"any"},description:""}}};M.__docgenInfo={description:`Renders a given Reified
@param entity the entity the Reified exists in
@param reified the Reified
@param showBadges boolean which indicates if badges should be shown
@param onNavigates functions defining the action when clicking clickable items
@param onNavigates.onNavigateToEntity function defining the action when clicking on an entities name
@param onNavigates.onNavigateToOntology function defining the action when clicking on an ontology badge
@param onNavigates.onNavigateToDisambiguate function defining the action when clicking on a disambiguation badge`,methods:[],displayName:"getReifiedJSX",props:{properties:{required:!0,tsType:{name:"any"},description:""}}};export{F as a,h as b,_ as c,W as d,M as g};
