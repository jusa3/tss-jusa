import{b as e}from"./iframe-CTDlrwV_.js";import{O as we,u as q,k as ke,m as Re,l as R,v as W,q as Be,o as B,n as f,w as Fe,x as h,B as J,C as Le,F as Pe,G as Ce,H as _e,K as qe,M as We,p as Je,I as Xe,L as Ve,N as Qe,j as ze,Q as Me,R as Ge}from"./widgetDescriptions-BWQxYL9a.js";import{d as T,g as w,b as Ne,a as Ke}from"./StructureRendering-D__qCoUh.js";import{E as d}from"./flex_item-MEW8UGuL.js";import{E as c}from"./globals-BpbGe8p9.js";import"./preload-helper-Dp1pzeXC.js";import"./icon_tip-Drht4bM1.js";const Ue=!0;function He(i,t){const n=i.getRdfTypes().filter(a=>a!=="http://www.w3.org/2002/07/owl#NamedIndividual"&&!a.startsWith("http://www.w3.org/2000/01/rdf-schema#"));if(i.getRdfTypes().length>0)return e.jsxs(d,{children:[e.jsx("b",{children:"Type"}),T(i,i.getLinkedEntities(),n,t.showBadges,{onNavigateToEntity:t.onNavigateToEntity,onNavigateToOntology:t.onNavigateToOntology,onNavigateToDisambiguate:t.onNavigateToDisambiguate})]})}function Ye(i,t){const n=i.getSameAs();if(n.length>0)return e.jsxs(d,{children:[e.jsx("b",{children:"Same As"}),T(i,i.getLinkedEntities(),n,t.showBadges,{onNavigateToEntity:t.onNavigateToEntity,onNavigateToOntology:t.onNavigateToOntology,onNavigateToDisambiguate:t.onNavigateToDisambiguate})]})}function Ze(i,t){const n=i.getDifferentFrom();if(n.length>0)return e.jsxs(e.Fragment,{children:[e.jsx(Fe,{}),e.jsxs(d,{children:[e.jsx("b",{children:"Different from"}),T(i,i.getLinkedEntities(),n,t.showBadges,{onNavigateToEntity:t.onNavigateToEntity,onNavigateToOntology:t.onNavigateToOntology,onNavigateToDisambiguate:t.onNavigateToDisambiguate})]})]})}function $e(i,t){const n=i.getDisjointWith();if(n.length>0)return e.jsxs(d,{children:[e.jsx("b",{children:"Disjoint with"}),T(i,i.getLinkedEntities(),n,t.showBadges,{onNavigateToEntity:t.onNavigateToEntity,onNavigateToOntology:t.onNavigateToOntology,onNavigateToDisambiguate:t.onNavigateToDisambiguate})]})}function et(i,t){const n=i.getInverseOf();if(n.length>0)return e.jsxs(d,{children:[e.jsx("b",{children:"Inverse of"}),T(i,i.getLinkedEntities(),n,t.showBadges,{onNavigateToEntity:t.onNavigateToEntity,onNavigateToOntology:t.onNavigateToOntology,onNavigateToDisambiguate:t.onNavigateToDisambiguate})]})}function X(i,t,n){return J(i).slice().reverse().map((a,o)=>e.jsxs("span",{children:[Ne(t,t.getLinkedEntities(),a,n.showBadges,{onNavigateToEntity:n.onNavigateToEntity,onNavigateToOntology:n.onNavigateToOntology,onNavigateToDisambiguate:n.onNavigateToDisambiguate}),e.jsx(e.Fragment,{children:o<J(i).length-1&&e.jsx("span",{style:{fontSize:"medium",color:"gray"},children:" ◂ "})})]},a))}function tt(i,t){const n=i.getPropertyChains().map(o=>o.value),a=n.filter(o=>Array.isArray(o)).length>0;if(n.length>0)return e.jsxs(d,{children:[e.jsx("b",{children:a?"Property chains":"Property chain"}),a?e.jsxs(e.Fragment,{children:[e.jsx("ul",{children:n.map(o=>e.jsx("li",{children:X(o,i,t)},h()))}),e.jsx("p",{})]}):e.jsx("p",{children:X(n,i,t)})]})}function it(i,t){const n=i.getEquivalents();if(n.length>0)return e.jsxs(d,{children:[e.jsx("b",{children:"Equivalent to"}),n.length===1?e.jsx("p",{children:w(i,n[0],t.showBadges,{onNavigateToEntity:t.onNavigateToEntity,onNavigateToOntology:t.onNavigateToOntology,onNavigateToDisambiguate:t.onNavigateToDisambiguate})}):e.jsxs(e.Fragment,{children:[e.jsx("ul",{children:n.map(a=>e.jsx("li",{children:w(i,a,t.showBadges,{onNavigateToEntity:t.onNavigateToEntity,onNavigateToOntology:t.onNavigateToOntology,onNavigateToDisambiguate:t.onNavigateToDisambiguate})},h()))}),e.jsx("p",{})]})]})}function nt(i,t){const n=i.getSuperEntities();if(n.length>0)return e.jsxs(d,{children:[e.jsxs("b",{children:["Sub",i.getType()," of"]}),n.length===1?e.jsx("p",{children:w(i,n[0],t.showBadges,{onNavigateToEntity:t.onNavigateToEntity,onNavigateToOntology:t.onNavigateToOntology,onNavigateToDisambiguate:t.onNavigateToDisambiguate})}):e.jsxs(e.Fragment,{children:[e.jsx("ul",{children:n.map(a=>e.jsx("li",{children:w(i,a,t.showBadges,{onNavigateToEntity:t.onNavigateToEntity,onNavigateToOntology:t.onNavigateToOntology,onNavigateToDisambiguate:t.onNavigateToDisambiguate})},h()))}),e.jsx("p",{})]})]})}function at(i,t){const n=i.getRelatedFrom(),a=Array.from(new Set(n.map(o=>o.value.property)));if(n.length>0)return e.jsxs(d,{children:[e.jsx("b",{children:"Related from"}),a.map(o=>{const k=i.getLinkedEntities().getLabelForIri(o);return e.jsxs("div",{children:[e.jsx("div",{children:e.jsx("a",{style:{color:"black"},href:o,children:e.jsx("i",{children:k||o})})}),e.jsxs(e.Fragment,{children:[e.jsx("ul",{style:{marginBottom:0},children:n.filter(m=>m.value.property===o).map(m=>e.jsx("li",{children:Ne(i,i.getLinkedEntities(),m.value.value,t.showBadges,{onNavigateToEntity:t.onNavigateToEntity,onNavigateToOntology:t.onNavigateToOntology,onNavigateToDisambiguate:t.onNavigateToDisambiguate})},h()))}),e.jsx("p",{})]}),e.jsx("p",{})," "]},o.toString()+h())})]})}function ot(i,t,n){if(t.length>0)return e.jsxs(d,{children:[e.jsx("b",{children:"Instances"}),e.jsxs(e.Fragment,{children:[e.jsx("ul",{children:t.map(a=>e.jsx("li",{children:Ke(i,i.getLinkedEntities(),a.getIri(),n.showBadges,{onNavigateToEntity:n.onNavigateToEntity,onNavigateToOntology:n.onNavigateToOntology,onNavigateToDisambiguate:n.onNavigateToDisambiguate})},h()))}),e.jsx("p",{})]})]})}function Se(i){const{api:t,iri:n,ontologyId:a,hasTitle:o=Ue,showBadges:k,entityType:m,parameter:F,onNavigateToEntity:Nt,onNavigateToDisambiguate:St,onNavigateToOntology:Ot,...L}=i,P=new we(t),{data:l,isLoading:Oe,isSuccess:C,isError:Ie}=q(["entityJson",t,n,a,m,F,k],async()=>P.getEntityObject(n,m,a,F,!1)),{data:_,isLoading:xe,isSuccess:je}=q({queryKey:["instances",l],queryFn:async()=>l&&f(l)&&l.hasDirectChildren()?P.getClassInstances(l.getIri(),l.getOntologyId()):[],enabled:!!l});function Ae(s,De){const g=[];if(Be(s)){const r=He(s,i);r!=null&&g.push(r);const u=Ye(s,i);u!=null&&g.push(u);const p=Ze(s,i);p!=null&&g.push(p)}if(B(s)||f(s)){const r=$e(s,i);r!=null&&g.push(r)}if(B(s)){const r=et(s,i);r!=null&&g.push(r);const u=tt(s,i);u!=null&&g.push(u)}if(B(s)||f(s)){const r=it(s,i);r!=null&&g.push(r);const u=nt(s,i);u!=null&&g.push(u);const p=at(s,i);p!=null&&g.push(p)}if(f(s)){const r=ot(s,De,i);r!=null&&g.push(r)}return g.length>0?e.jsx(R,{...L,children:g}):e.jsx(R,{...L,children:"No relations available."})}return e.jsx(e.Fragment,{children:e.jsxs(ke,{"data-testid":"entity-relations",title:o?(m?W(Le(m)):C&&l?W(l.getType()):"")+" Relations":"",layout:"horizontal",children:[(Oe||xe)&&e.jsx(Re,{size:"s"}),Ie&&e.jsx(R,{children:"Requested resource not available"}),C&&je&&l!==void 0&&_!==void 0&&Ae(l,_)]})})}Se.__docgenInfo={description:"",methods:[],displayName:"EntityRelationsWidget",props:{api:{required:!0,tsType:{name:"string"},description:"The API instance for the API call."},entityType:{required:!1,tsType:{name:"entityTypeNames[number]",raw:"typeof entityTypeNames[number]"},description:"Sets the type of the entity whose information you want to fetch."},ontologyId:{required:!1,tsType:{name:"string"},description:"Select a specific ontology by id"},iri:{required:!0,tsType:{name:"string"},description:"Entity IRI whose information you want to fetch."},hasTitle:{required:!1,tsType:{name:"boolean"},description:"Show title, default is true"},showBadges:{required:!1,tsType:{name:"boolean"},description:"If true (default), entity badges linking to their defining ontologies are shown."},parameter:{required:!1,tsType:{name:"string"},description:""},onNavigateToEntity:{required:!1,tsType:{name:"union",raw:`((
  ontologyId: string,
  entityType?: string,
  entity?: EntityData,
) => void) | string`,elements:[{name:"unknown"},{name:"string"}]},description:`This function is called every time an entity link is clicked
@param ontologyId obtains the ontologyId of the current ontology
@param entityType obtains the entityType of the clicked entity
@param entity.iri obtains the iri of the clicked entity
@param entity.label obtains the label of the clicked entity
@param entity.definedBy obtains the list of ontologies the clicked entity is defined in (only OLS)
@param entity.hasChildren obtains a boolean indicating whether the clicked entity has child entities
@param entity.numDescendants obtains the number of hierarchical descendants of the clicked entity (only OLS)
@param entity.parents obtains the list of parent entities of the clicked entity (only OLS, Skosmos)`},onNavigateToOntology:{required:!1,tsType:{name:"union",raw:`((
  ontologyId: string,
  entityType?: string,
  entity?: EntityData,
) => void) | string`,elements:[{name:"unknown"},{name:"string"}]},description:`This function is called every time an entity link is clicked
@param ontologyId obtains the ontologyId of the clicked badge
@param entityType obtains the entityType of the clicked badge
@param entity.iri obtains the iri of the clicked badge (can be empty)
@param entity.label obtains the label of the clicked badge
@param entity.definedBy obtains the list of ontologies the clicked entity is defined in (only OLS)
@param entity.hasChildren obtains a boolean indicating whether the clicked entity has child entities
@param entity.numDescendants obtains the number of hierarchical descendants of the clicked entity (only OLS)
@param entity.parents obtains the list of parent entities of the clicked entity (only OLS, Skosmos)`},onNavigateToDisambiguate:{required:!1,tsType:{name:"union",raw:"((entityType: string, entity?: EntityData) => void) | string",elements:[{name:"unknown"},{name:"string"}]},description:`This function is called every time a disambiguation badge is clicked
@param entityType obtains the entityType of the clicked badge
@param entity.iri obtains the iri of the clicked badge (can be empty)
@param entity.label obtains the label of the clicked badge
@param entity.definedBy obtains the list of ontologies the clicked entity is defined in (only OLS)
@param entity.hasChildren obtains a boolean indicating whether the clicked entity has child entities
@param entity.numDescendants obtains the number of hierarchical descendants of the clicked entity (only OLS)
@param entity.parents obtains the list of parent entities of the clicked entity (only OLS, Skosmos)`}}};const{expect:st,waitFor:rt,within:gt}=__STORYBOOK_MODULE_TEST__,lt={...ze,...Qe,...Ve,...Xe,...Je,...We,...qe,..._e,...Ce,...Pe},ct={api:"https://semanticlookup.zbmed.de/api/",iri:"",ontologyId:"",entityType:"term",hasTitle:!0,showBadges:!0,parameter:"",onNavigateToEntity:"Console message",onNavigateToOntology:"Console message",onNavigateToDisambiguate:"Console message"},yt={api:c,entityType:"term",ontologyId:"agro",iri:"http://purl.obolibrary.org/obo/AGRO_00000002"},dt={api:c,entityType:"term",ontologyId:"go",iri:"http://purl.obolibrary.org/obo/BFO_0000004"},mt={api:c,entityType:"individual",ontologyId:"bco",iri:"http://purl.obolibrary.org/obo/IAO_0000120"},ut={api:c,entityType:"term",ontologyId:"go",iri:"http://purl.obolibrary.org/obo/GO_0048021"},ht={api:c,entityType:"term",ontologyId:"bfo",iri:"http://purl.obolibrary.org/obo/BFO_0000001"},pt={api:c,entityType:"property",ontologyId:"ro",iri:"http://purl.obolibrary.org/obo/RO_0000057"},Tt={api:c,entityType:"property",ontologyId:"ro",iri:"http://purl.obolibrary.org/obo/RO_0002170"},ft={api:c,entityType:"term",ontologyId:"iao",iri:"http://purl.obolibrary.org/obo/IAO_0000078"},vt={api:c,entityType:"term",ontologyId:"aism",iri:"http://purl.obolibrary.org/obo/UBERON_0000006"},bt={api:c,entityType:"term",ontologyId:"foodon",iri:"http://purl.obolibrary.org/obo/FOODON_00003382"},Et={api:c,entityType:"individual",ontologyId:"bco",iri:"http://purl.obolibrary.org/obo/IAO_0000120",onNavigateToEntity:"Navigate to EBI page",onNavigateToOntology:"Navigate to EBI page",onNavigateToDisambiguate:"Navigate to EBI page"},y=async({canvasElement:i})=>{const t=gt(i);await rt(async()=>{const n=t.getByTestId("entity-relations");await st(n).toBeInTheDocument()},{timeout:3e3})},Rt={title:"Additional Entity Metadata/EntityRelationsWidget",component:Se,parameters:{layout:"centered",docs:{source:{transform:Ge},description:{component:Me}}},argTypes:lt,args:ct},v={args:yt,play:y},b={args:dt,play:y},E={args:mt,play:y},N={args:ut,play:y},S={args:ht,play:y},O={args:pt,play:y},I={args:Tt,play:y},x={args:ft,play:y},j={args:vt,play:y},A={args:bt,play:y},D={args:Et,play:y};var V,Q,z;v.parameters={...v.parameters,docs:{...(V=v.parameters)==null?void 0:V.docs,source:{originalSource:`{
  args: SubEntityOfArgs,
  play: commonEntityRelationsWidgetPlay
}`,...(z=(Q=v.parameters)==null?void 0:Q.docs)==null?void 0:z.source}}};var M,G,K;b.parameters={...b.parameters,docs:{...(M=b.parameters)==null?void 0:M.docs,source:{originalSource:`{
  args: AllValuesFromArgs,
  play: commonEntityRelationsWidgetPlay
}`,...(K=(G=b.parameters)==null?void 0:G.docs)==null?void 0:K.source}}};var U,H,Y;E.parameters={...E.parameters,docs:{...(U=E.parameters)==null?void 0:U.docs,source:{originalSource:`{
  args: DifferentFromArgs,
  play: commonEntityRelationsWidgetPlay
}`,...(Y=(H=E.parameters)==null?void 0:H.docs)==null?void 0:Y.source}}};var Z,$,ee;N.parameters={...N.parameters,docs:{...(Z=N.parameters)==null?void 0:Z.docs,source:{originalSource:`{
  args: EquivalentToArgs,
  play: commonEntityRelationsWidgetPlay
}`,...(ee=($=N.parameters)==null?void 0:$.docs)==null?void 0:ee.source}}};var te,ie,ne;S.parameters={...S.parameters,docs:{...(te=S.parameters)==null?void 0:te.docs,source:{originalSource:`{
  args: SingleValueArgs,
  play: commonEntityRelationsWidgetPlay
}`,...(ne=(ie=S.parameters)==null?void 0:ie.docs)==null?void 0:ne.source}}};var ae,oe,se;O.parameters={...O.parameters,docs:{...(ae=O.parameters)==null?void 0:ae.docs,source:{originalSource:`{
  args: InverseOfArgs,
  play: commonEntityRelationsWidgetPlay
}`,...(se=(oe=O.parameters)==null?void 0:oe.docs)==null?void 0:se.source}}};var re,ge,le;I.parameters={...I.parameters,docs:{...(re=I.parameters)==null?void 0:re.docs,source:{originalSource:`{
  args: PropertyChainArgs,
  play: commonEntityRelationsWidgetPlay
}`,...(le=(ge=I.parameters)==null?void 0:ge.docs)==null?void 0:le.source}}};var ce,ye,de;x.parameters={...x.parameters,docs:{...(ce=x.parameters)==null?void 0:ce.docs,source:{originalSource:`{
  args: InstancesArgs,
  play: commonEntityRelationsWidgetPlay
}`,...(de=(ye=x.parameters)==null?void 0:ye.docs)==null?void 0:de.source}}};var me,ue,he;j.parameters={...j.parameters,docs:{...(me=j.parameters)==null?void 0:me.docs,source:{originalSource:`{
  args: AxiomsArgs,
  play: commonEntityRelationsWidgetPlay
}`,...(he=(ue=j.parameters)==null?void 0:ue.docs)==null?void 0:he.source}}};var pe,Te,fe;A.parameters={...A.parameters,docs:{...(pe=A.parameters)==null?void 0:pe.docs,source:{originalSource:`{
  args: QualifiedCardinalityArgs,
  play: commonEntityRelationsWidgetPlay
}`,...(fe=(Te=A.parameters)==null?void 0:Te.docs)==null?void 0:fe.source}}};var ve,be,Ee;D.parameters={...D.parameters,docs:{...(ve=D.parameters)==null?void 0:ve.docs,source:{originalSource:`{
  args: NavigateToEBIPageArgs,
  play: commonEntityRelationsWidgetPlay
}`,...(Ee=(be=D.parameters)==null?void 0:be.docs)==null?void 0:Ee.source}}};const Bt=["SubEntityOf","AllValuesFrom","DifferentFrom","EquivalentTo","SingleValue","InverseOf","PropertyChain","Instances","Axioms","QualifiedCardinality","NavigateToEBIPage"];export{b as AllValuesFrom,j as Axioms,E as DifferentFrom,N as EquivalentTo,x as Instances,O as InverseOf,D as NavigateToEBIPage,I as PropertyChain,A as QualifiedCardinality,S as SingleValue,v as SubEntityOf,Bt as __namedExportsOrder,Rt as default};
