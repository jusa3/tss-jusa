import{b as u}from"./iframe-CTDlrwV_.js";import{O as f,u as h}from"./widgetDescriptions-BWQxYL9a.js";import{D as T}from"./DescriptionPresentation-DkgG-sbt.js";const I="No description available.";function w(a){const{api:e,ontologyId:t,iri:i,descText:p,thingType:r,parameter:s,useLegacy:n,className:c,...d}=a,l=new f(e),{data:o,isLoading:m,isError:y,error:g}=h(["description",e,s,r,i,t,n],async()=>l.getThingObject(i,r,t,s,n));return u.jsx(T,{description:o?o.getDescription():I,descText:p,className:c,isLoading:m,error:y?g:null,...d})}w.__docgenInfo={description:"",methods:[],displayName:"DescriptionWidget",props:{api:{required:!0,tsType:{name:"string"},description:"The API instance for the API call."},thingType:{required:!1,tsType:{name:"thingTypeNames[number]",raw:"typeof thingTypeNames[number]"},description:"Sets the type of the thing whose information you want to fetch."},ontologyId:{required:!1,tsType:{name:"string"},description:"Select a specific ontology by id"},iri:{required:!1,tsType:{name:"string"},description:"Entity IRI whose information you want to fetch."},parameter:{required:!1,tsType:{name:"string"},description:""},useLegacy:{required:!1,tsType:{name:"boolean"},description:"Toggle between OLS3 (legacy) and OLS4 API versions."},descText:{required:!1,tsType:{name:"string"},description:"Set your own text manually that overwrites the text fetched from the API"},className:{required:!1,tsType:{name:"string"},description:"CSS class for styling"},color:{required:!1,tsType:{name:"union",raw:"EuiLinkColor | string",elements:[{name:"EuiLinkColor"},{name:"string"}]},description:"Color of the text, names, hex or rgb"}}};export{w as D};
